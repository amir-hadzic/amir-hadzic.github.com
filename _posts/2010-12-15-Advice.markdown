---
layout: post
title: Advice
---

I’m not feeling competent enough to do any programming right now so I’m going to take this time to try and give some advice to every newcomer into our world — world of programming (and butterflies). I’m a self-thought programmer (although chasing a computer science degree) and for some reason I have picked up some good habits. Like everyone else, I have some bad ones too. For now, lets talk about the good ones.

When I was just starting out I learned from practical examples from my school textbook. Those were all very simple examples, usually involving more mathematics than programming. I didn’t have any Internet connection at that time so using any tutorials or e-books was out of question. Also, my English skills were limited to “go, go, go” and “my name is Amir Hadžić”. Soon enough I started testing all possible variants of BASIC and eventually stumbled upon Visual Basic .NET. At that time I had a very slow dial-up connection so I was introduced to the Internet, programmers best friend. My English skills were getting better every day as I read more and more tutorials and e-books. So my first advice to you is to **learn English**. You can’t really go wrong with this one. Just start learning. Watch movies, read articles, try to write some blog posts  (guess what I’m doing right now). If you can translate this article without anyones help, you’r capable enough to read manuals, tutorials, e-books and various documentation.

My second advice to you is to **read the documentation**. Don’t take this one lightly, it’s more important than it seems to be. The only way you can learn yourself to always check and read the documentation and to be able to read it well is to do it often. If you are just starting out you’r lucky. Just go and experiment with as many languages and libraries as you can. There are no deadlines to meet, you can roam the software development world as you wish. It will be harder for you to learn to do this later on. You will probably be too lazy to do it.

Here’s one more advice which is also very important. Maybe it’s the most important of them all. **Don’t be lazy**. If you already are and you are just starting out, maybe programming isn’t your thing. As a programmer you should never stop learning and improving your skill set. It’s easy to forget about learning new technologies and ways to develop software when you are constantly trying to meet deadlines but it’s not an excuse. You need to burst out of your bubble and start working on your skills. Being lazy will make you write ugly code and software with bad architectural design. If you are lazy, most of the time you will choose the “easy” way, which is probably going to backfire and make you do even more work than doing it the right way at start. Always try to read about best practices in the field you are working on. If you are developing an application that will have some database back-end, you should read about sanitizing user input or database normalization as well as other related topis. Not being lazy also involves following some coding standard for the language you’r using. It doesn’t matter which one you follow, the only thing that matters is that it’s documented somewhere and that you are following it.

These advices are high-level and they are (mostly) the reason for more specific mistakes that bad programmers usually do. I might write some more detailed posts about best practices in various fields of software development.
